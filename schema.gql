# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Account {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  productsBought: [Product!]
  productsSold: [Product!]
  accountingScheme: AccountingScheme!
  code: String!
}

type AccountingScheme {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  currency: Currency!
  accounts: [Account!]
}

input AccountSaveArgs {
  id: Float
  accountingSchemeId: Float!
  code: String!
  displayName: String!
}

type Address {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  country: Country!
  line1: String!
  city: String!
  zipCode: String!
  customerRegistratedAddresses: [Customer!]
  organizationRegistratedAddresses: [Organization!]
  vendorRegistratedAddresses: [Vendor!]
}

input AddressSaveArgs {
  city: String!
  countryIsoCode: String!
  line1: String!
  zipCode: String!
}

type AppUser {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  email: String
  username: String
  name: String
  identities: [UserIdentity!]
  organizations: [UserToOrganization!]
  owningTasks: [Task!]
  solvingTasks: [Task!]
  ownCalendar: [CalendarActivity!]
}

type Bank {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  bankIdentifierCode: String!
  bankAccounts: [BankAccount!]
}

type BankAccount {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  iban: String!
  swift: String!
  bank: Bank!
  bankAccountCustomerPrintableNumber: String!
  salesInvoices: [SalesInvoice!]
  recurringSalesInvoices: [RecurringSalesInvoice!]
  organizations: [Organization!]
  vendorInvoices: [VendorInvoice!]
}

input BankAccountSaveArgs {
  id: Float
  bankId: Float!
  bankAccountCustomerPrintableNumber: String!
  displayName: String!
  iban: String!
  swift: String!
}

input BaseSaveArgs {
  id: Float
}

type CalendarActivity {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  customer: Customer
  prospect: Prospect
  displayName: String!
  end: DateTime!
  location: String
  start: DateTime!
  owner: AppUser!
}

type Country {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  isoCode: String!
  addresses: [Address!]
  vatRegistrations: [VatRegistration!]
}

type Currency {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  isoCode: String!
  currencyRatesFrom: [CurrencyRate!]
  currencyRatesTo: [CurrencyRate!]
}

type CurrencyRate {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  currencyMultiplyingRate: Float!
  end: Date!
  from: Currency!
  start: Date!
  to: Currency!
}

input CurrencySaveArgs {
  id: Float
  isoCode: String!
  displayName: String!
}

type Customer {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  legalAddress: Address!
  legalName: String!
  vatNumber: String
  salesInvoices: [SalesInvoice!]
  calendarActivities: [CalendarActivity!]
  tasks: [Task!]
  invoicingEmail: String!
  idNumber: String!
}

input CustomerSaveArgs {
  id: Float
  legalAddress: AddressSaveArgs!
  displayName: String!
  vatNumber: String
  legalName: String!
  invoicingEmail: String!
  idNumber: String!
}

"""Date custom scalar type"""
scalar Date

scalar DateTime

type DocumentNumberSequence {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  forType: String!
  current: Float!
  organization: Organization!
}

type EntityBase {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
}

input GenericEntityArgs {
  id: Int!
  entityName: String!
  isCurrent: Boolean!
}

type GenericEntityResult {
  updated: Boolean!
  date: Date!
}

type Lead {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  company: String
  email: String!
  phone: String
  budget: Float!
  currency: Currency!
  expectedSolution: String!
  problemToSolve: String!
}

input LoginArgs {
  username: String!
  password: String!
}

type Mutation {
  setIsCurrent(args: GenericEntityArgs!): GenericEntityResult!
  customer(args: CustomerSaveArgs!): Customer!
  salesInvoice(args: SalesInvoiceSaveArgs!): SalesInvoice!
  confirmSalesInvoice(args: BaseSaveArgs!): SalesInvoice!
  task(args: TaskSaveArgs!): Task!
  prospect(args: ProspectSaveArgs!): Prospect!
  account(args: AccountSaveArgs!): Account!
  product(args: ProductSaveArgs!): Product!
  salesInvoiceLine(args: SalesInvoiceLineSaveArgs!): SalesInvoiceLine!
  tax(args: TaxSaveArgs!): Tax!
  bankAccount(args: BankAccountSaveArgs!): BankAccount!
  currency(args: CurrencySaveArgs!): Currency!
}

type Opportunity {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  budget: Float!
  closingDate: Date!
  company: String!
  email: String!
  phone: String!
  currency: Currency!
  solution: Product!
}

type Organization {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  contact: String!
  legalAddress: Address!
  legalName: String!
  vatRegistrations: [VatRegistration!]
  salesInvoices: [SalesInvoice!]
  recurringSalesInvoices: [SalesInvoice!]
  vendorInvoices: [VendorInvoice!]
  bankAccount: BankAccount!
  accountingScheme: AccountingScheme!
  users: [UserToOrganization!]
  documentNumberSequences: [DocumentNumberSequence!]
  projects: [Project!]
  registration: String!
  idNumber: String!
}

type Product {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  buyingAccount: Account!
  sellingAccount: Account!
  salesInvoiceLine: [SalesInvoiceLine!]
  recurringSalesInvoiceLine: [RecurringSalesInvoiceLine!]
  sku: String!
  opportunities: [Opportunity!]
}

input ProductSaveArgs {
  id: Float
  buyingAccountCode: String!
  displayName: String!
  sellingAccountCode: String!
  sku: String!
}

type Project {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  owner: Organization!
  tasks: [Task!]
}

type Prospect {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  actionTaken: String!
  problem: String!
  url: String
  originated: Suspect!
  tasks: [Task!]
  calendarActivities: [CalendarActivity!]
}

input ProspectSaveArgs {
  id: Float
  actionTaken: String!
  displayName: String!
  problem: String!
  url: String!
  originatedSuspectId: Float
}

type Query {
  getIsCurrent(args: GenericEntityArgs!): [GenericEntityResult!]!
  now: DateTime!
  customers: [Customer!]!
  customerById(id: Int!): Customer!
  invoices: [SalesInvoice!]!
  salesInvoiceById(id: Int!): SalesInvoice!
  tasks: [Task!]!
  calendarActivities: [CalendarActivity!]!
  users: [AppUser!]!
  leads: [Lead!]!
  prospects: [Prospect!]!
  prospectById(id: Int!): Prospect!
  accounts: [Account!]!
  accountById(id: Int!): Account!
  products: [Product!]!
  productById(id: Int!): Product!
  salesInvoiceLines: [SalesInvoiceLine!]!
  salesInvoiceLineById(id: Int!): SalesInvoiceLine!
  myOrganizations: [Organization!]!
  organizationById(id: Int!): Organization!
  taxes: [Tax!]!
  taxById(id: Int!): Tax!
  bankAccounts: [BankAccount!]!
  bankAccountById(id: Int!): BankAccount!
  currencies: [Currency!]!
  currencyById(id: Int!): Currency!
}

type RecurringSalesInvoice {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  bankAccount: BankAccount!
  currency: Currency!
  customer: Customer!
  lines: [RecurringSalesInvoiceLine!]
  organization: Organization!
  cronPattern: String
  lastDayInMonth: Boolean
  paymentTermInDays: Float!
}

type RecurringSalesInvoiceLine {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  linePrice: Float!
  lineTax: Tax!
  narration: String!
  product: Product!
  quantity: Float!
  invoice: RecurringSalesInvoice!
}

type SalesInvoice {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  bankAccount: BankAccount!
  dueDate: Date!
  issuedOn: Date!
  organization: Organization!
  currency: Currency!
  customer: Customer!
  documentNo: String
  isDraft: Boolean!
  isCalculated: Boolean!
  grandTotal: Float!
  lines: [SalesInvoiceLine!]
  narration: String!
  totalLines: Float!
  totalLinesAccountingSchemeCurrency: Float!
  grandTotalAccountingSchemeCurrency: Float!
  currencyMultiplyingRateToAccountingSchemeCurrency: Float!
  transactionDate: Date!
  vatReport: [SalesInvoiceVat!]
  printDate: Date
  printed: Boolean!
  printError: String
  content: String
  paymentTermInDays: Float!
}

type SalesInvoiceLine {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  lineOrder: Float!
  lineTax: Tax!
  linePrice: Float!
  product: Product!
  quantity: Float!
  invoice: SalesInvoice!
  task: Task!
  narration: String!
}

input SalesInvoiceLineSaveArgs {
  id: Float
  invoiceId: Float
  lineOrder: Float!
  linePrice: Float!
  lineTaxId: Float!
  narration: String!
  productId: Float!
  quantity: Float!
}

input SalesInvoiceSaveArgs {
  id: Float
  bankAccountDisplayName: String!
  currencyIsoCode: String!
  customerDisplayName: String!
  issuedOn: Date!
  lines: [SalesInvoiceLineSaveArgs!]!
  organizationDisplayName: String!
  paymentTermInDays: Float!
  transactionDate: Date!
}

type SalesInvoiceVat {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  invoice: SalesInvoice!
  vatRatePercent: Float!
  vatTotalAccountingSchemeCurrencyRaw: Float!
  vatTotalRaw: Float!
  vatTotalAccountingSchemeCurrency: Float!
  vatTotal: Float!
}

type Suspect {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  description: String!
  url: String
  prospects: [Prospect!]
  tasks: [Task!]
}

type Task {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  completed: Boolean!
  customer: Customer
  description: String
  displayName: String!
  dueDate: Date!
  invoiceLines: [SalesInvoiceLine!]
  workLogs: [WorkLog!]
  owner: AppUser!
  responsible: AppUser!
  predecessors: Task!
  project: Project
  prospect: Prospect
  suspect: Suspect
}

input TaskSaveArgs {
  id: Float
  customerId: Float
  dueDate: Date!
  ownerId: Float!
  responsibleId: Float!
  displayName: String!
  prospectId: Float
}

type Tax {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  ratePercent: Float!
}

input TaxSaveArgs {
  id: Float
  displayName: String!
  ratePercent: Float!
}

type UniqueDisplayEntityBase {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
}

type UserIdentity {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  externalUser: String!
  provider: String!
  user: AppUser!
}

type UserToOrganization {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  organization: Organization!
  user: AppUser!
}

type VatRegistration {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  registeredIn: Country!
  registeredFor: Organization!
  start: Date!
  vatNumber: String!
  end: Date
}

type Vendor {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  invoicingEmail: String!
  legalAddress: Address!
  legalName: String!
  vatNumber: String
}

type VendorInvoice {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  bankAccount: BankAccount!
  currency: Currency!
  documentNo: String!
  dueDate: Date!
  grandTotal: Float!
  grandTotalAccountingSchemeCurrency: Float!
  narration: String!
  organization: Organization!
  transactionDate: Date!
  vatReport: [VendorInvoiceVat!]
  issuedOn: Date!
}

type VendorInvoiceVat {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  invoice: VendorInvoice!
  vatRatePercent: Float!
  vatTotalAccountingSchemeCurrency: Float!
}

type WorkLog {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  durationInMinutes: Float!
  task: Task!
}
