# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Account {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  productsBought: [Product!]
  productsSold: [Product!]
  accountingScheme: AccountingScheme!
}

type AccountingScheme {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  currency: Currency!
  accounts: [Account!]
}

type Address {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  country: Country!
  line1: String!
  city: String!
  zipCode: String!
  customerRegistratedAddresses: [Customer!]
  organizationRegistratedAddresses: [Organization!]
}

input AddressSaveArgs {
  city: String!
  countryId: Float!
  line1: String!
  zipCode: String!
}

type AppUser {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  email: String
  username: String
  name: String
  identities: [UserIdentity!]
  organizations: [UserToOrganization!]
}

type Bank {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  bankIdentifierCode: String!
  displayName: String!
  bankAccounts: [BankAccount!]
}

type BankAccount {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  iban: String!
  swift: String!
  bank: Bank!
  bankAccountCustomerPrintableNumber: String!
  displayName: String!
  salesInvoices: [SalesInvoice!]
  organizations: [Organization!]
}

input BaseSaveArgs {
  id: Float
}

type Country {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  isoCode: String!
  addresses: [Address!]
  vatRegistrations: [VatRegistration!]
}

type Currency {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  isoCode: String!
  salesInvoices: [SalesInvoice!]
  accountingSchemas: [AccountingScheme!]
}

type Customer {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  legalAddress: Address!
  legalName: String!
  vatNumber: String
  salesInvoices: [SalesInvoice!]
  invoicingEmail: String!
}

input CustomerSaveArgs {
  id: Float
  legalAddress: AddressSaveArgs!
  displayName: String!
  vatNumber: String
  legalName: String!
  invoicingEmail: String!
}

"""Date custom scalar type"""
scalar Date

type DocumentNumberSequence {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  forType: String!
  current: Float!
  organization: Organization!
}

type EntityBase {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
}

input GenericEntityArgs {
  id: Int!
  entityName: String!
  isCurrent: Boolean!
}

type GenericEntityResult {
  updated: Boolean!
  date: Date!
}

input LoginArgs {
  username: String!
  password: String!
}

type Mutation {
  setIsCurrent(args: GenericEntityArgs!): GenericEntityResult!
  customer(args: CustomerSaveArgs!): Customer!
}

type Organization {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  contact: String!
  legalAddress: Address!
  legalName: String!
  vatRegistrations: [VatRegistration!]
  salesInvoices: [SalesInvoice!]
  bankAccount: BankAccount!
  accountingScheme: AccountingScheme!
  users: [UserToOrganization!]
  documentNumberSequences: [DocumentNumberSequence!]
  registration: String!
}

type Product {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  buyingAccount: Account!
  displayName: String!
  sellingAccount: Account!
  salesInvoiceLine: [SalesInvoiceLine!]
  sku: String!
}

type Query {
  getIsCurrent(args: GenericEntityArgs!): [GenericEntityResult!]!
  now: Date!
  customers: [Customer!]!
  invoices: [SalesInvoice!]!
}

type SalesInvoice {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  bankAccount: BankAccount!
  dueDate: Date!
  issuedOn: Date!
  organization: Organization!
  currency: Currency!
  customer: Customer!
  documentNo: String!
  isDraft: Boolean!
  isCalculated: Boolean!
  grandTotal: Float!
  lines: [SalesInvoiceLine!]
  narration: String!
  totalLines: Float!
  totalLinesAccountingSchemeCurrency: Float!
  grandTotalAccountingSchemeCurrency: Float!
  currencyMultiplyingRateToAccountingSchemeCurrency: Float!
  transactionDate: Date!
  vatReport: [SalesInvoiceVat!]
  printDate: Date
  printed: Boolean!
  printError: String
  content: String
}

type SalesInvoiceLine {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  lineOrder: Float!
  lineTax: Tax!
  linePrice: Float!
  product: Product!
  quantity: Float!
  invoice: SalesInvoice!
  narration: String!
}

type SalesInvoiceVat {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  invoice: SalesInvoice!
  vatRatePercent: Float!
  vatTotalAccountingSchemeCurrencyRaw: Float!
  vatTotalRaw: Float!
  vatTotalAccountingSchemeCurrency: Float!
  vatTotal: Float!
}

type Tax {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  ratePercent: Float!
  salesInvoiceLine: [SalesInvoiceLine!]
}

type UserIdentity {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  externalUser: String!
  provider: String!
  user: AppUser!
}

type UserToOrganization {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  organization: Organization!
  user: AppUser!
}

type VatRegistration {
  id: Float!
  updtTs: Date!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  registeredIn: Country!
  registeredFor: Organization!
  start: Date!
  vatNumber: String!
  end: Date
}
